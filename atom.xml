<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ty&#39;s Blog</title>
  
  
  <link href="https://www.tykowale.com/atom.xml" rel="self"/>
  
  <link href="https://www.tykowale.com/"/>
  <updated>2023-10-09T18:51:40.767Z</updated>
  <id>https://www.tykowale.com/</id>
  
  <author>
    <name>Ty Kowalewski</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GraphQL With NestJS - Intro</title>
    <link href="https://www.tykowale.com/2023/10/07/GraphQL-With-NestJS/"/>
    <id>https://www.tykowale.com/2023/10/07/GraphQL-With-NestJS/</id>
    <published>2023-10-07T20:52:42.000Z</published>
    <updated>2023-10-09T18:51:40.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Welcome to <em>GraphQL With NestJS</em>, a tutorial designed to guide you through the process of creating a robust and scalable<br>API using GraphQL. Drawing from a decade of experience in software engineering, I’ll share best practices to set you on<br>the path of building a greenfield API. By the end of this tutorial, you’ll have a solid foundation for developing and<br>deploying applications. This guide is crafted to help you harness the power of NestJS effectively, enabling you to build<br>apps that are both easily scalable and maintainable. We’ll cover everything from designing our database tables to<br>properly using authentication and authorization. We will not be building a frontend for this, but the API should<br>be easily consumable by any web&#x2F;mobile app.</p><p>We’ll be using the following technologies</p><ul><li>Node with Typescript</li><li>NestJS</li><li>GraphQL with Express</li><li>Prisma</li><li>Postgres</li></ul><h1 id="Before-Getting-Started"><a href="#Before-Getting-Started" class="headerlink" title="Before Getting Started"></a>Before Getting Started</h1><p>This is not a meant to teach you how to use every single technology in the stack. You need to be familiar with using<br>Typescript and Postgres. It’d be helpful to be familiar with git but that is not necessary. You also should have a<br>text editor you prefer, I personally use <a href="https://www.jetbrains.com/webstorm/">Webstorm</a>, but <a href="https://code.visualstudio.com/">VS Code</a> is more widely used. I’ll be using <code>npm</code> for all the commands. <code>yarn</code> and <code>pnpm</code> are good alternatives, but they are not as widely adopted.</p><h1 id="What-are-we-building"><a href="#What-are-we-building" class="headerlink" title="What are we building?"></a>What are we building?</h1><p>We are going to be building a Family Tasks app. I recently had a baby and the need to get better at tracking tasks<br>became obvious pretty quickly. It’s complex enough to explain all the concepts we need to cover while being<br>small enough that it can be covered in a reasonably sized tutorial.</p><p><a href="https://mermaid.live/edit#pako:eNqNz8EKwjAMBuBXKTkvL9DbQAVRN3GCCL2ENbqhbaXrDnPbu1t1B0EP5hR-voSkh9JpBgnsZzWdPRllRaxFulmuj2IYEIdebOe7Is-EFBU1aMh2v9A-LVZfZJocHaJ7E8wPWQyjvLN3GNyHfq3400IChr2hWsfr-2emIFRsWIGMrSZ_UaDsGB21wRWdLUEG33IC7U1T4OlfkCe6Njw-AEdpUy8">Mermaid Link</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">erDiagram</span><br><span class="line">    FAMILY ||--|&#123; PERSON : has-many</span><br><span class="line">    FAMILY ||--|&#123; TASK : has-many</span><br><span class="line">    PERSON &#125;o--o&#123; TASK-OWNERS : zero-to-many</span><br><span class="line">    TASK &#125;o--o&#123; TASK-OWNERS : zero-to-many</span><br></pre></td></tr></table></figure><p>A family is a collection of people. A family can have multiple tasks, and these tasks can have owners within the<br>family. Tasks will be able to be marked as complete, and near the end we’ll add some more advanced functionality like reoccurring<br>tasks. Users will be able to authenticate, and we’ll implement authorization to ensure that individuals outside the family won’t have access to tasks they shouldn’t see.</p><h1 id="Topics-This-Will-Cover"><a href="#Topics-This-Will-Cover" class="headerlink" title="Topics This Will Cover"></a>Topics This Will Cover</h1><ol><li>Learn NestJS from the ground up</li><li>Bootstrapping a GraphQL API in NestJS</li><li>Organizing a NestJS project</li><li>Adding prisma with Postgres to a NestJS project</li><li>CRUD operations through GraphQL</li><li>Authentication with JWT and Cookies</li><li>GraphQL API design</li><li>…More stuff, I’ll update this list as I write out the articles</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Welcome to &lt;em&gt;GraphQL With Ne</summary>
      
    
    
    
    
    <category term="GraphQL-With-NestJS" scheme="https://www.tykowale.com/tags/GraphQL-With-NestJS/"/>
    
  </entry>
  
</feed>
